openapi: 3.0.0
info:
  description: |
    Mock API
  version: 1.0.0
  title: Mock API
tags:
  - name: login
    description: Login API
  - name: user
    description: User API
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
paths:
  /login:
    post:
      tags:
        - login
      summary: Login
      description: ''
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/LoginRequest'
      responses:
        '200':
          description: OK
  /user/{from}/{to}:
    get:
      tags:
        - user
      summary: find users
      description: ''
      operationId: findUsers
      parameters:
        - name: from
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: ''
        - name: to
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: ''
        - name: userId
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          description: ''
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json::
              schema:
                $ref: '#/components/schemas/Users'
  /user:
    post:
      tags:
        - user
      summary: Create User
      description: ''
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        '200':
          description: OK
    put:
      tags:
        - user
      summary: Edit User
      description: ''
      operationId: editUser
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        '200':
          description: OK
  /user/{id}:
    delete:
      tags:
        - user
      summary: Remove User
      description: ''
      operationId: removeUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: ''
      responses:
        '200':
          description: OK
components:
  requestBodies:
    LoginRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Login'
      description: List of user object
      required: true
    UserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  schemas:
    Login:
      type: object
      properties:
        userId:
          type: string
        password:
          type: string
    Users:
      type: object
      properties:
        totalItems:
          type: integer
          format: int32
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        
        